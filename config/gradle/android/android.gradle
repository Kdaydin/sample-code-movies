android {
    compileSdkVersion(Android.SDK_COMPLIE)
    testOptions.unitTests.includeAndroidResources = true
    defaultConfig {
        minSdkVersion(Android.SDK_MIN)
        targetSdkVersion(Android.SDK_TARGET)
    }
    compileOptions {
        sourceCompatibility = Java.version
        targetCompatibility = Java.version
    }
    buildTypes {
        def themoviedbApiPropertiesFile = file(Config.KEYS_THEMOVIEDB_API_FILE_PATH)
        def themoviedbApiProperties = new Properties()
        themoviedbApiProperties.load(new FileInputStream(themoviedbApiPropertiesFile))
        def themoviedb_api_key = themoviedbApiProperties[Keys.THEMOVIEDB_API_KEY_PROPERTY]

        debug {
            buildConfigField "String", Keys.THEMOVIEDB_API_KEY_CONST, "\"${themoviedb_api_key}\""
        }
        release {
            buildConfigField "String", Keys.THEMOVIEDB_API_KEY_CONST, "\"${themoviedb_api_key}\""
        }
    }
    testOptions {
        unitTests {
            all {
                testLogging { // Print test details in the terminal (or CI).
                    events(Logs.listOfTestLoggingEvents)
                    exceptionFormat = Logs.TEST_LOGGING_EXCEPTION_FORMAT
                }
            }
        }
    }
    sourceSets {
        main {
            java.srcDirs = [Sources.MAIN_KOTLIN]
        }
        test {
            java.srcDirs = [Sources.TEST_KOTLIN, Sources.TEST_ROBOLECTRIC]
            resources.srcDirs = [Sources.TEST_RESOURCES]
        }
        androidTest {
            java.srcDirs = [Sources.ANDROID_KOTLIN]
        }
    }
}
